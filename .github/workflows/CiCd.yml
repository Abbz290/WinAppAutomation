name: CI/CD for DevExpress XPO WinForms App

on:
  push:
    branches:
      - master  # Trigger on pushes to the main branch
  pull_request:
    branches:
      - master  # Trigger on PRs to the main branch

jobs:
  build:
    runs-on: windows-latest  # Use a Windows environment for your WinForms app

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Set up .NET 8.0
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '8.0'  # Set to .NET 8.0

    - name: Configure DevExpress NuGet Source
      run: nuget sources add -Name "DevExpress NuGet Feed" -Source "https://nuget.devexpress.com/U6YRYNe1qarLOLMFwYiU2R1jQRVmex9dq9SgVPQCd4EtEuhzhU/api/v3/index.json"

    - name: Restore Dependencies
      run: dotnet restore WinAppAutomation.sln

    - name: Build the Application
      run: dotnet build WinAppAutomation.sln --configuration Release

    - name: Run Tests
      run: dotnet test PersonTests/PersonTests.csproj --configuration Release
      
    - name: Deploy via SSH to Local Machine
      env:
        SSH_HOST: ${{ secrets.SSH_HOST }}
        SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
        SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
      run: |
        # Install OpenSSH client if not already installed (for SSH/SCP on Windows)
        choco install openssh -y
        
        # Ensure the destination folder exists on the local machine (you can change this path)
        mkdir "C:/Deployments/WinAppAutomation"

        # Use SCP to copy files to the local machine's destination directory
        scp -r C:/Users/abbz2/source/repos/WinAppAutomation/WinAppAutomation.Win/bin/Release/net8.0-windows/* $env:SSH_USERNAME@$env:SSH_HOST:"C:/Deployments/WinAppAutomation"
        
        # SSH into the local machine to verify deployment
        ssh $env:SSH_USERNAME@$env:SSH_HOST "dir C:/Deployments/WinAppAutomation"
    
